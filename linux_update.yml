---
- name: Update, clean, and maintain Linux hosts
  hosts: Linux
  become: true
  vars:
    package_manager: apt  # Can be changed to yum or other package managers if needed
    update_options: "yes" # Additional options for update/upgrade tasks
    restart_vm: false     # Default to false, will be overridden by CLI argument if needed
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Upgrade all packages to the latest version
      apt:
        upgrade: dist
        update_cache: yes
        autoremove: yes
        autoclean: yes

    - name: Remove unnecessary packages
      apt:
        name: '*'
        state: absent
        autoremove: yes

    - name: Clean apt cache
      apt:
        autoclean: yes

    - name: Get current kernel version
      command: uname -r
      register: current_kernel

    - name: Get list of installed kernels
      shell: "dpkg --list 'linux-image*' | grep ^ii | awk '{print $2}'"
      register: installed_kernels

    - name: Get previous kernel version
      shell: "dpkg --list 'linux-image*' | grep ^ii | awk '{print $2}' | sort -V | grep -B1 {{ current_kernel.stdout }} | head -n 1"
      register: previous_kernel

    - name: Set fact for kernels to keep
      set_fact:
        kernels_to_keep: "{{ [current_kernel.stdout, previous_kernel.stdout] }}"

    - name: Debug current, previous, and installed kernels
      debug:
        msg: "Current: {{ current_kernel.stdout }}, Previous: {{ previous_kernel.stdout }}, Installed: {{ installed_kernels.stdout_lines }}"

    - name: Remove unused kernels
      apt:
        name: "{{ item }}"
        state: absent
        purge: yes
      loop: "{{ installed_kernels.stdout_lines | difference(kernels_to_keep) }}"
      when: item not in kernels_to_keep

    - name: Clean up package cache
      apt:
        autoclean: yes

    - name: Autoremove unnecessary packages
      apt:
        autoremove: yes

    - name: Update GRUB
      command: update-grub

    - name: Restart the VM if needed
      command: /sbin/shutdown -r now
      when: restart_vm | bool and not ansible_check_mode
      async: 1
      poll: 0
